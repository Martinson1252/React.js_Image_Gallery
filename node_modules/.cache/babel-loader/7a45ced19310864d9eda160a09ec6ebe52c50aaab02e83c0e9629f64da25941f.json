{"ast":null,"code":"var t = {\n  photo: \"https://api.pexels.com/v1/\",\n  video: \"https://api.pexels.com/videos/\",\n  collections: \"https://api.pexels.com/v1/collections/\"\n};\nfunction r(r, e) {\n  var n = {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"User-Agent\": \"Pexels/JavaScript\",\n        Authorization: r\n      }\n    },\n    o = t[e];\n  return function (t, r) {\n    return fetch(\"\" + o + t + \"?\" + function (t) {\n      return Object.keys(t).map(function (r) {\n        return r + \"=\" + t[r];\n      }).join(\"&\");\n    }(r || {}), n).then(function (t) {\n      if (!t.ok) throw new Error(t.statusText);\n      return t.json();\n    });\n  };\n}\nfunction e(t) {\n  var e = r(t, \"collections\");\n  return {\n    all: function (t) {\n      return void 0 === t && (t = {}), e(\"\", t);\n    },\n    media: function (t) {\n      var r = t.id,\n        n = function (t, r) {\n          if (null == t) return {};\n          var e,\n            n,\n            o = {},\n            i = Object.keys(t);\n          for (n = 0; n < i.length; n++) r.indexOf(e = i[n]) >= 0 || (o[e] = t[e]);\n          return o;\n        }(t, [\"id\"]);\n      return e(\"\" + r, n);\n    },\n    featured: function (t) {\n      return void 0 === t && (t = {}), e(\"featured\", t);\n    }\n  };\n}\nfunction n(t) {\n  return !(!t || !t.photos);\n}\nvar o = {\n  __proto__: null,\n  isPhotos: n,\n  isVideos: function (t) {\n    return !(!t || !t.videos);\n  },\n  isError: function (t) {\n    return !!t.error;\n  }\n};\nfunction i(t) {\n  var e = r(t, \"photo\");\n  return {\n    search: function (t) {\n      return e(\"/search\", t);\n    },\n    curated: function (t) {\n      return void 0 === t && (t = {}), e(\"/curated\", t);\n    },\n    show: function (t) {\n      return e(\"/photos/\" + t.id);\n    },\n    random: function () {\n      try {\n        var t = Math.floor(1e3 * Math.random());\n        return Promise.resolve(this.curated({\n          page: t,\n          per_page: 1\n        })).then(function (t) {\n          return n(t) ? t.photos[0] : t;\n        });\n      } catch (t) {\n        return Promise.reject(t);\n      }\n    }\n  };\n}\nfunction u(t) {\n  var e = r(t, \"video\");\n  return {\n    search: function (t) {\n      return e(\"/search\", t);\n    },\n    popular: function (t) {\n      return void 0 === t && (t = {}), e(\"/popular\", t);\n    },\n    show: function (t) {\n      return e(\"/videos/\" + t.id);\n    }\n  };\n}\nfunction c(t) {\n  if (!t || \"string\" != typeof t) throw new TypeError(\"An ApiKey must be provided when initiating the Pexel's client.\");\n  return {\n    typeCheckers: o,\n    photos: i(t),\n    videos: u(t),\n    collections: e(t)\n  };\n}\nrequire(\"isomorphic-fetch\");\nexport { c as createClient };","map":{"version":3,"names":["t","photo","video","collections","r","e","n","method","headers","Accept","Authorization","o","fetch","Object","keys","map","join","then","ok","Error","statusText","json","all","media","id","i","length","indexOf","featured","photos","__proto__","isPhotos","isVideos","videos","isError","error","search","curated","show","random","Math","floor","Promise","resolve","page","per_page","reject","u","popular","c","TypeError","typeCheckers","require","createClient"],"sources":["D:\\Dokumenty\\Projekty\\Github\\React.js_Image_Gallery\\node_modules\\pexels\\src\\createFetchWrapper.ts","D:\\Dokumenty\\Projekty\\Github\\React.js_Image_Gallery\\node_modules\\pexels\\src\\constants.ts","D:\\Dokumenty\\Projekty\\Github\\React.js_Image_Gallery\\node_modules\\pexels\\src\\generateCollectionEndpoints.ts","D:\\Dokumenty\\Projekty\\Github\\React.js_Image_Gallery\\node_modules\\pexels\\src\\typeCheckers.ts","D:\\Dokumenty\\Projekty\\Github\\React.js_Image_Gallery\\node_modules\\pexels\\src\\generatePhotoEndpoints.ts","D:\\Dokumenty\\Projekty\\Github\\React.js_Image_Gallery\\node_modules\\pexels\\src\\generateVideoEndpoints.ts","D:\\Dokumenty\\Projekty\\Github\\React.js_Image_Gallery\\node_modules\\pexels\\src\\createClient.ts"],"sourcesContent":["import { Params } from \"./types\";\nimport { photoBaseUrl, videoBaseUrl, collectionBaseUrl } from \"./constants\";\n\ntype AllowedTypes = \"photo\" | \"video\" | \"collections\";\n\nconst baseUrls: { [T in AllowedTypes]: string } = {\n  photo: photoBaseUrl,\n  video: videoBaseUrl,\n  collections: collectionBaseUrl,\n};\n\nexport default function createFetchWrapper(apiKey: string, type: AllowedTypes) {\n  const options = {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"User-Agent\": \"Pexels/JavaScript\",\n      Authorization: apiKey,\n    },\n  };\n\n  const baseUrl = baseUrls[type];\n\n  return <T extends Params>(path: string, params?: T) =>\n    fetch(`${baseUrl}${path}?${stringifyParams(params || {})}`, options).then(\n      (response) => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        return response.json();\n      }\n    );\n}\n\nfunction stringifyParams<T extends Params>(params: T) {\n  return Object.keys(params)\n    .map((key) => `${key}=${params[key]}`)\n    .join(\"&\");\n}\n","export const photoBaseUrl = \"https://api.pexels.com/v1/\";\nexport const videoBaseUrl = \"https://api.pexels.com/videos/\";\nexport const collectionBaseUrl = \"https://api.pexels.com/v1/collections/\";\n","import createFetchWrapper from \"./createFetchWrapper\";\nimport { Collection, PaginationParams, ErrorResponse, Medium } from \"./types\";\n\ntype AllReturn =\n  | {\n      page: number;\n      per_page: number;\n      collections: Collection[];\n    }\n  | ErrorResponse;\n\ntype MediaReturn =\n  | {\n      page: number;\n      per_page: number;\n      total_results: number;\n      media: (Medium & { type: \"Video\" | \"Photo\" })[];\n    }\n  | ErrorResponse;\n\ntype FeaturedReturn =\n  | { page: number; per_page: number; collections: Collection[] }\n  | ErrorResponse;\n\nexport default function generateCollectionEndpoints(apiKey: string) {\n  const fetchWrapper = createFetchWrapper(apiKey, \"collections\");\n\n  return {\n    all(params: PaginationParams = {}): Promise<AllReturn> {\n      return fetchWrapper(\"\", params);\n    },\n    media({\n      id,\n      ...params\n    }: PaginationParams & {\n      id: string | number;\n      type?: \"photos\" | \"videos\";\n    }): Promise<MediaReturn> {\n      return fetchWrapper(`${id}`, params);\n    },\n    featured(params: PaginationParams = {}): Promise<FeaturedReturn> {\n      return fetchWrapper(\"featured\", params);\n    },\n  };\n}\n","import { Photos, Videos, ErrorResponse } from \"./types\";\n\n/**\n * A helper function to determine if the object is a valid Photo response\n */\nexport function isPhotos(x: any): x is Photos {\n  return !!(x && x.photos);\n}\n\n/**\n * A helper function to determine if the object is a valid Video response\n */\nexport function isVideos(x: any): x is Videos {\n  return !!(x && x.videos);\n}\n\n/**\n * A helper function to determine if the object was an error response\n */\nexport function isError(x: any): x is ErrorResponse {\n  return !!x.error;\n}\n","import createFetchWrapper from \"./createFetchWrapper\";\nimport {\n  Photo,\n  PaginationParams,\n  ErrorResponse,\n  Photos,\n  PhotosWithTotalResults,\n} from \"./types\";\nimport { isPhotos } from \"./typeCheckers\";\n\ntype SearchReturn = PhotosWithTotalResults | ErrorResponse;\ntype CuratedReturn = Photos | ErrorResponse;\ntype ShowReturn = Photo | ErrorResponse;\ntype RandomReturn = Photo | ErrorResponse;\n\nexport default function generatePhotoEndpoints(apiKey: string) {\n  const fetchWrapper = createFetchWrapper(apiKey, \"photo\");\n\n  return {\n    search(\n      params: PaginationParams & { query: string }\n    ): Promise<SearchReturn> {\n      return fetchWrapper(`/search`, params);\n    },\n    curated(params: PaginationParams = {}): Promise<CuratedReturn> {\n      return fetchWrapper(`/curated`, params);\n    },\n    show({ id }: { id: string | number }): Promise<ShowReturn> {\n      return fetchWrapper(`/photos/${id}`);\n    },\n    async random(): Promise<RandomReturn> {\n      const randomPage = Math.floor(1000 * Math.random());\n      const response = await this.curated({ page: randomPage, per_page: 1 });\n\n      if (isPhotos(response)) {\n        return response.photos[0] as RandomReturn;\n      }\n\n      return response as ErrorResponse;\n    },\n  };\n}\n","import createFetchWrapper from \"./createFetchWrapper\";\nimport {\n  PaginationParams,\n  ErrorResponse,\n  Video,\n  Videos,\n  VideoFilterParams,\n} from \"./types\";\n\ntype SearchReturn = Videos | ErrorResponse;\ntype PopularReturn = Videos | ErrorResponse;\ntype ShowReturn = Video;\n\nexport default function generatePhotoEndpoints(apiKey: string) {\n  const fetchWrapper = createFetchWrapper(apiKey, \"video\");\n\n  return {\n    search(\n      params: PaginationParams &\n        VideoFilterParams & {\n          query: string;\n        }\n    ): Promise<SearchReturn> {\n      return fetchWrapper(`/search`, params);\n    },\n    popular(\n      params: PaginationParams & VideoFilterParams = {}\n    ): Promise<PopularReturn> {\n      return fetchWrapper(`/popular`, params);\n    },\n    show({ id }: { id: string | number }): Promise<ShowReturn> {\n      return fetchWrapper(`/videos/${id}`);\n    },\n  };\n}\n","require(\"isomorphic-fetch\");\n\nimport generateCollectionEndpoints from \"./generateCollectionEndpoints\";\nimport generatePhotoEndpoints from \"./generatePhotoEndpoints\";\nimport generateVideoEndpoints from \"./generateVideoEndpoints\";\nimport * as typeCheckers from \"./typeCheckers\";\n\nexport default function createClient(apiKey: string) {\n  if (!apiKey || typeof apiKey !== \"string\") {\n    throw new TypeError(\n      `An ApiKey must be provided when initiating the Pexel's client.`\n    );\n  }\n\n  return {\n    typeCheckers,\n    photos: generatePhotoEndpoints(apiKey),\n    videos: generateVideoEndpoints(apiKey),\n    collections: generateCollectionEndpoints(apiKey),\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}